function PosteriorParametersHistograms()
% stephane.adjemian@ens.fr [09-09-2005]
global estim_params_ M_ options_ bayestopt_ oo_

TeX   	= options_.TeX;
nblck 	= options_.mh_nblck;
nvx   	= estim_params_.nvx;
nvn   	= estim_params_.nvn;
ncx   	= estim_params_.ncx;
ncn   	= estim_params_.ncn;
np    	= estim_params_.np ;
nx    	= nvx+nvn+ncx+ncn+np;

DirectoryName = CheckPath('metropolis');
OutputDirectoryName = CheckPath('Output');
load([ DirectoryName '/'  M_.fname '_mh_history'])
FirstMhFile = record.KeepedDraws.FirstMhFile;
FirstLine = record.KeepedDraws.FirstLine; ifil = FirstLine;
TotalNumberOfMhFiles = sum(record.MhDraws(:,2))
TotalNumberOfMhDraws = sum(record.MhDraws(:,1));
FirstMhFile = record.KeepedDraws.FirstMhFile;
NumberOfDraws = TotalNumberOfMhDraws-floor(options_.mh_drop*TotalNumberOfMhDraws);
clear record;

MaxNumberOfPlotPerFigure = 9;% The square root must be an integer!
nn = sqrt(MaxNumberOfPlotPerFigure);

figurename = 'Priors and posteriors hitograms';

if TeX    
  fidTeX = fopen([OutputDirectoryName '/' M_.fname '_PosteriorsHist.TeX'],'w');
  fprintf(fidTeX,'%% TeX eps-loader file generated by PlotPosteriorHistograms.m (Dynare).\n');
  fprintf(fidTeX,['%% ' datestr(now,0) '\n']);
  fprintf(fidTeX,' \n');
end

figunumber = 0;
subplotnum = 0;

for ip = 1:nx,
  
  subplotnum = subplotnum+1;
  if subplotnum == 1
    figunumber = figunumber+1;
    if options_.nodisplay
      hfig = figure('Name',figurename,'Visible','off');
    else
      hfig = figure('Name',figurename);
    end
  end
  if subplotnum == 1
    if TeX
      TeXNAMES = [];
    end
    NAMES = [];
  end
  [nam,texnam] = get_the_name(ip,TeX);
  NAMES = strvcat(NAMES,nam);
  if TeX
    TeXNAMES = strvcat(TeXNAMES,texnam);
  end
  
  if ip<=nvx
    Draws = GetAllPosteriorDraws(ip,FirstMhFile,FirstLine,TotalNumberOfMhFiles,NumberOfDraws);
    %[post_mean, post_median, post_var, hpd_interval, post_deciles, density] = posterior_moments(Draws,1);
    [N,X] = hist(Draws,30);
    k = estim_params_.var_exo(ip,1);
    name = deblank(M_.exo_names(k,:));
    eval(['pmode = oo_.posterior_mode.shocks_std.' name ';'])
  elseif ip<=nvn+nvx
    Draws = GetAllPosteriorDraws(ip,FirstMhFile,FirstLine,TotalNumberOfMhFiles,NumberOfDraws);
    %[post_mean, post_median, post_var, hpd_interval, post_deciles, density] = posterior_moments(Draws,1);    
    [N,X] = hist(Draws,30);
    name = deblank(options_.varobs(estim_params_.var_endo(ip-nvx,1),:));
    eval(['pmode = oo_.posterior_mode.measurement_errors_std.' name ';'])  
  elseif ip<=nvn+nvx+ncx
    Draws = GetAllPosteriorDraws(ip,FirstMhFile,FirstLine,TotalNumberOfMhFiles,NumberOfDraws);
    %[post_mean, post_median, post_var, hpd_interval, post_deciles, density] = posterior_moments(Draws,1);
    [N,X] = hist(Draws,30);
    k1 = estim_params_.corrx(ip-nvx-nvn,1);
    k2 = estim_params_.corrx(ip-nvx-nvn,2);
    name = [deblank(M_.exo_names(k1,:)) ',' deblank(M_.exo_names(k2,:))];
    NAME = [deblank(M_.exo_names(k1,:)) '_' deblank(M_.exo_names(k2,:))];
    eval(['pmode = oo_.posterior_mode.shocks_corr.' name ';'])  
  elseif ip<=nvn+nvx+ncx+ncn
    Draws = GetAllPosteriorDraws(ip,FirstMhFile,FirstLine,TotalNumberOfMhFiles,NumberOfDraws);
    %[post_mean, post_median, post_var, hpd_interval, post_deciles, density] = posterior_moments(Draws,1);
    [N,X] = hist(Draws,30);
    k1 = estim_params_.corrn(ip-(nvx+nvn+ncx),1);
    k2 = estim_params_.corrn(ip-(nvx+nvn+ncx),2);
    name = [deblank(M_.endo_names(k1,:)) ',' deblank(M_.endo_names(k2,:))];
    NAME = [deblank(M_.endo_names(k1,:)) '_' deblank(M_.endo_names(k2,:))];
    eval(['pmode = oo_.posterior_mode.measurement_errors_corr.' name ';'])
  else
    Draws = GetAllPosteriorDraws(ip,FirstMhFile,FirstLine,TotalNumberOfMhFiles,NumberOfDraws);
    %[post_mean, post_median, post_var, hpd_interval, post_deciles, density] = posterior_moments(Draws,1);
    [N,X] = hist(Draws,30);
    name = bayestopt_.name{ip};
    eval(['pmode = oo_.posterior_mode.parameters.' name ';'])
  end
  subplot(nn,nn,subplotnum)
  f=N./length(Draws);
  top0=max(f);
  hh = bar(X,f);
  minbound=min(Draws);
  maxbound=max(Draws);
  hold on;
  plot( [pmode pmode], [0.0 1.1*top0], '--g', 'linewidth', 2);
  box on;
  axis([minbound maxbound 0 1.1*top0]);
  title(nam,'Interpreter','none');
  hold off;
  drawnow

  if subplotnum == MaxNumberOfPlotPerFigure | ip == nx;
    eval(['print -depsc2 ' OutputDirectoryName '/' M_.fname '_PosteriorHist' int2str(figunumber)]);
    eval(['print -dpdf ' OutputDirectoryName '/' M_.fname '_PosteriorHist' int2str(figunumber)]);
    if options_.nodisplay, 
      set(hfig,'Visible','on');
    end
    saveas(hfig,[OutputDirectoryName '/' M_.fname '_PosteriorHist' int2str(figunumber) '.fig']);
    if TeX
      fprintf(fidTeX,'\\begin{figure}[H]\n');
      for j = 1:size(NAMES,1)
	fprintf(fidTeX,'\\psfrag{%s}[1][][0.5][0]{%s}\n',deblank(NAMES(j,:)),deblank(TeXNAMES(j,:)));
      end    
      fprintf(fidTeX,'\\centering\n');
      fprintf(fidTeX,'\\includegraphics[scale=0.5]{%s_PosteriorHist%s}\n',M_.fname,int2str(figunumber));
      fprintf(fidTeX,'\\caption{Priors and posteriors.}');
      fprintf(fidTeX,'\\label{Fig:PosteriorHist:%s}\n',int2str(figunumber));
      fprintf(fidTeX,'\\end{figure}\n');
      fprintf(fidTeX,' \n');
      if i == npar
	fprintf(fidTeX,'%% End of TeX file.\n');
	fclose(fidTeX);
      end
    end
    if options_.nodisplay, 
      close(hfig), 
    end
    subplotnum = 0;
  end
end
